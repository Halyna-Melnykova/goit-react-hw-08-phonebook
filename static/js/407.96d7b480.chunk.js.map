{"version":3,"file":"static/js/407.96d7b480.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","redux/items/items-selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"wrapper\":\"ContactForm_wrapper__-Umw-\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/items/items-operation';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [state, setState] = useState({\n    name: '',\n    phone: '',\n  });\n  const { name, phone } = state;\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setState({ ...state, [name]: value });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(addContact(state));\n    reset();\n  };\n\n  const reset = () => {\n    setState({ name: '', phone: '' });\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <h1>Phonebook</h1>\n      <div className={s.wrapper}>\n        <label className={s.label}>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"phone\"\n            value={phone}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={s.formBtn} type=\"submit\">\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","export const getState = state => ({\n  loading: state.loading,\n  error: state.error,\n});\n\nexport const getFilteredContacts = state => {\n  const {\n    items: { items },\n    filter,\n  } = state;\n  if (!filter) {\n    return items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = items.filter(({ name }) => {\n    const normalizedName = name.toLowerCase();\n\n    return normalizedName.includes(normalizedFilter);\n  });\n\n  return result;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"button\":\"ContactList_button__7kL4l\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts, removeContact } from 'redux/items/items-operation';\nimport { getFilteredContacts, getState } from 'redux/items/items-selectors';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const items = useSelector(getFilteredContacts);\n  const { loading, error } = useSelector(getState);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => {\n    dispatch(removeContact(id));\n  };\n  return (\n    <ul className={s.contactList}>\n      {loading && <p>Loading...</p>}\n      {error && <p>Error</p>}\n      {!loading &&\n        items.length > 0 &&\n        items.map(({ id, name, phone }) => (\n          <li key={id} className={s.contactItem}>\n            <p>\n              {name}: {phone}\n            </p>\n            <button className={s.button} onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","export const getFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\n\nconst Contacts = () => {\n  return (\n    <>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["useState","name","phone","state","setState","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","className","s","onSubmit","preventDefault","addContact","type","onChange","pattern","title","required","getState","loading","error","getFilteredContacts","items","filter","normalizedFilter","toLowerCase","includes","useSelector","useEffect","fetchContacts","length","map","id","onClick","removeContact","onDeleteContact","getFilter","target","setFilter"],"sourceRoot":""}