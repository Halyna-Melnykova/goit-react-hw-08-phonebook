{"version":3,"file":"static/js/656.ee85c0e1.chunk.js","mappings":"wQACA,EAAuB,2BAAvB,EAA4D,8BAA5D,EAAkG,4BAAlG,EAAsI,4BAAtI,EAA4K,8B,UC+E5K,EAzEqB,WACnB,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,KAAM,GACNC,MAAO,GACPC,SAAU,KAHZ,eAAOC,EAAP,KAAcC,EAAd,KAKQJ,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SACfG,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GACrBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MACdT,GAAS,kBAAKD,GAAN,cAAcH,EAAOa,IAC9B,EAQKC,EAAQ,WACZV,EAAS,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAC3C,EAED,OAAIG,GACK,SAAC,KAAD,CAAUU,GAAG,eAIpB,iBAAMC,UAAWC,EAAQC,SAfN,SAAAP,GACnBA,EAAMQ,iBACNX,GAASY,EAAAA,EAAAA,IAAOjB,IAChBW,GACD,EAWC,UACE,iBAAKE,UAAWC,EAAhB,WACE,mBAAOD,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXjB,KAAK,OACLa,MAAOb,EACPqB,SAAUX,EACVY,YAAY,aACZC,UAAQ,QAGZ,mBAAOP,UAAWC,EAAlB,oBAEE,kBACED,UAAWC,EACXjB,KAAK,QACLa,MAAOZ,EACPoB,SAAUX,EACVY,YAAY,cACZE,KAAK,QACLD,UAAQ,QAGZ,mBAAOP,UAAWC,EAAlB,uBAEE,kBACED,UAAWC,EACXjB,KAAK,WACLa,MAAOX,EACPmB,SAAUX,EACVY,YAAY,iBACZE,KAAK,WACLD,UAAQ,QAGZ,mBAAQP,UAAWC,EAAnB,0BAIP,ECpED,EARiB,WACf,OACE,2BACE,SAAC,EAAD,KAGL,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"wrapper\":\"RegisterForm_wrapper__cfB-9\",\"label\":\"RegisterForm_label__4pTXF\",\"input\":\"RegisterForm_input__FsgBz\",\"formBtn\":\"RegisterForm_formBtn__uyMmA\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { isLogin } from '../../redux/auth/auth-selectors';\nimport { signup } from 'redux/auth/auth-operations';\nimport s from './RegisterForm.module.css';\n\nconst RegisterForm = () => {\n  const [state, setState] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const { name, email, password } = state;\n  const isAuth = useSelector(isLogin);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setState({ ...state, [name]: value });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(signup(state));\n    reset();\n  };\n\n  const reset = () => {\n    setState({ name: '', email: '', password: '' });\n  };\n\n  if (isAuth) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <div className={s.wrapper}>\n        <label className={s.label}>\n          Name:\n          <input\n            className={s.input}\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Enter name\"\n            required\n          ></input>\n        </label>\n        <label className={s.label}>\n          Email:\n          <input\n            className={s.input}\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            placeholder=\"Enter email\"\n            type=\"email\"\n            required\n          ></input>\n        </label>\n        <label className={s.label}>\n          Password:\n          <input\n            className={s.input}\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            placeholder=\"Enter password\"\n            type=\"password\"\n            required\n          ></input>\n        </label>\n        <button className={s.formBtn}>Register</button>\n      </div>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <main>\n      <RegisterForm />\n    </main>\n  );\n};\n\nexport default Register;\n"],"names":["useState","name","email","password","state","setState","isAuth","useSelector","isLogin","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","to","className","s","onSubmit","preventDefault","signup","onChange","placeholder","required","type"],"sourceRoot":""}